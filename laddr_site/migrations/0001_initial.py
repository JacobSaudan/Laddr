# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-02-20 04:27
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('team_size', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playstyle', models.CharField(choices=[('Aggressive', 'Aggressive'), ('Conservative', 'Conservative'), ('Supportive', 'Supportive')], max_length=40)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laddr_site.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.ManyToManyField(to='laddr_site.Availability')),
                ('games', models.ManyToManyField(through='laddr_site.PlayerGame', to='laddr_site.Game')),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('date_created', models.DateField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laddr_site.Game')),
                ('members', models.ManyToManyField(through='laddr_site.Membership', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament_Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateTimeField()),
                ('team_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_game_1', to='laddr_site.Team')),
                ('team_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_game_2', to='laddr_site.Team')),
            ],
        ),
        migrations.AddField(
            model_name='playergame',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laddr_site.Profile'),
        ),
        migrations.AddField(
            model_name='membership',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laddr_site.Team'),
        ),
        migrations.AddField(
            model_name='availability',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='laddr_site.Game'),
        ),
        migrations.AlterUniqueTogether(
            name='tournament_game',
            unique_together=set([('team_1', 'team_2')]),
        ),
    ]
